import org.apache.tools.ant.taskdefs.condition.Os
apply plugin: 'liberty'
apply plugin: 'war'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
	
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:1.1-SNAPSHOT'
        classpath fileTree(dir: installDir+'/bin/tools', include: 'ws-server.jar')
        classpath fileTree(dir: installDir+'/dev/spi/ibm', include: '*.jar')
        classpath fileTree(dir: installDir+'/lib', include: '*.jar')
    }
}

dependencies {
    providedCompile 'com.netflix.archaius:archaius-core:0.5.12'
    providedCompile 'com.netflix.hystrix:hystrix-core:1.2.2'
    providedCompile 'org.slf4j:slf4j-api:1.6.4'
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    testCompile 'junit:junit:3.8.1'
}

test.dependsOn deploy
libertyStart.dependsOn libertyCreate
deploy.dependsOn libertyStart
deploy.dependsOn war

libertyCreate << {
    copy {
       from 'src/test/resources'
       into "${buildDir}/wlp/servers/defaultServer"
    }
}

configurations {
    features
}

dependencies {
    features project(path: ':ws-netflixoss', configuration: 'feature')
}

libertyCreate << {
    exec {
        environment 'WLP_USER_DIR', "${buildDir}/wlp"
        commandLine file("${installDir}/bin/featureManager" + (Os.isFamily(Os.FAMILY_WINDOWS) ? '.bat' : '')), 'install', configurations.features.singleFile
    }
}

test.finalizedBy libertyStop

liberty {
	installDir=project.installDir
	serverName=project.serverName
}
